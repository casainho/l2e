   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"gpio.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.gpio_init,"ax",%progbits
  19              		.align	1
  20              		.global	gpio_init
  21              		.thumb
  22              		.thumb_func
  24              	gpio_init:
  25              	.LFB29:
  26              		.file 1 "gpio.c"
   1:gpio.c        **** /*
   2:gpio.c        ****  * l2e
   3:gpio.c        ****  *
   4:gpio.c        ****  * Copyright (C) Jorge Pinto aka Casainho, 2016.
   5:gpio.c        ****  *
   6:gpio.c        ****  * Released under the GPL License, Version 3
   7:gpio.c        ****  */
   8:gpio.c        **** 
   9:gpio.c        **** #include "stm32f10x_rcc.h"
  10:gpio.c        **** #include "stm32f10x_gpio.h"
  11:gpio.c        **** #include "stm32f10x_rcc.h"
  12:gpio.c        **** 
  13:gpio.c        **** /* Connetions:
  14:gpio.c        ****  *
  15:gpio.c        ****  * PA0  (ADC1_IN1)      -- potentiometer
  16:gpio.c        ****  * PA1  (ADC1_IN2)      -- magnetic sensor
  17:gpio.c        ****  * PB5  (GPIO)          -- LED debug
  18:gpio.c        ****  */
  19:gpio.c        **** 
  20:gpio.c        **** void gpio_init (void)
  21:gpio.c        **** {
  27              		.loc 1 21 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 73B5     		push	{r0, r1, r4, r5, r6, lr}
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -16
  34              		.cfi_offset 5, -12
  35              		.cfi_offset 6, -8
  36              		.cfi_offset 14, -4
  22:gpio.c        ****   /* Enable GPIOB clock. */
  23:gpio.c        ****   RCC_APB2PeriphClockCmd( RCC_APB2Periph_AFIO  |
  37              		.loc 1 23 0
  38 0002 134B     		ldr	r3, .L2
  39 0004 40F20D20 		movw	r0, #525
  40 0008 0121     		movs	r1, #1
  41 000a 9847     		blx	r3
  42              	.LVL0:
  24:gpio.c        ****                           RCC_APB2Periph_GPIOA |
  25:gpio.c        ****                           RCC_APB2Periph_GPIOB |
  26:gpio.c        ****                           RCC_APB2Periph_ADC1
  27:gpio.c        ****                           , ENABLE);
  28:gpio.c        **** 
  29:gpio.c        ****   /* DAC Periph clock enable */
  30:gpio.c        ****   RCC_APB1PeriphClockCmd( RCC_APB1Periph_DAC
  43              		.loc 1 30 0
  44 000c 4FF00050 		mov	r0, #536870912
  45 0010 0121     		movs	r1, #1
  46 0012 104B     		ldr	r3, .L2+4
  47 0014 9847     		blx	r3
  48              	.LVL1:
  31:gpio.c        ****                           , ENABLE);
  32:gpio.c        **** 
  33:gpio.c        ****   /* Once the DAC channel is enabled, the corresponding GPIO pin is automatically
  34:gpio.c        ****      connected to the DAC converter. In order to avoid parasitic consumption,
  35:gpio.c        ****      the GPIO pin should be configured in analog */
  36:gpio.c        ****   GPIO_InitTypeDef GPIO_InitStructure;
  37:gpio.c        ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0 | GPIO_Pin_1;
  49              		.loc 1 37 0
  50 0016 0325     		movs	r5, #3
  38:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  51              		.loc 1 38 0
  52 0018 0023     		movs	r3, #0
  39:gpio.c        ****   GPIO_Init(GPIOA, &GPIO_InitStructure);
  53              		.loc 1 39 0
  54 001a 01A9     		add	r1, sp, #4
  55 001c 0E4E     		ldr	r6, .L2+8
  56 001e 0F48     		ldr	r0, .L2+12
  37:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  57              		.loc 1 37 0
  58 0020 ADF80450 		strh	r5, [sp, #4]	@ movhi
  38:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AIN;
  59              		.loc 1 38 0
  60 0024 8DF80730 		strb	r3, [sp, #7]
  61              		.loc 1 39 0
  62 0028 B047     		blx	r6
  63              	.LVL2:
  40:gpio.c        **** 
  41:gpio.c        ****   GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;
  42:gpio.c        ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  64              		.loc 1 42 0
  65 002a 8DF80650 		strb	r5, [sp, #6]
  43:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  44:gpio.c        ****   GPIO_Init(GPIOB, &GPIO_InitStructure);
  66              		.loc 1 44 0
  67 002e 0C4D     		ldr	r5, .L2+16
  41:gpio.c        ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  68              		.loc 1 41 0
  69 0030 2024     		movs	r4, #32
  43:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  70              		.loc 1 43 0
  71 0032 1023     		movs	r3, #16
  72              		.loc 1 44 0
  73 0034 2846     		mov	r0, r5
  74 0036 01A9     		add	r1, sp, #4
  43:gpio.c        ****   GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;
  75              		.loc 1 43 0
  76 0038 8DF80730 		strb	r3, [sp, #7]
  41:gpio.c        ****   GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
  77              		.loc 1 41 0
  78 003c ADF80440 		strh	r4, [sp, #4]	@ movhi
  79              		.loc 1 44 0
  80 0040 B047     		blx	r6
  81              	.LVL3:
  45:gpio.c        **** 
  46:gpio.c        ****   /* Turn off port bits */
  47:gpio.c        ****   GPIO_ResetBits(GPIOB, GPIO_Pin_5);
  82              		.loc 1 47 0
  83 0042 2846     		mov	r0, r5
  84 0044 2146     		mov	r1, r4
  85 0046 074B     		ldr	r3, .L2+20
  86 0048 9847     		blx	r3
  87              	.LVL4:
  48:gpio.c        **** }
  88              		.loc 1 48 0
  89 004a 02B0     		add	sp, sp, #8
  90              		.cfi_def_cfa_offset 16
  91              		@ sp needed
  92 004c 70BD     		pop	{r4, r5, r6, pc}
  93              	.L3:
  94 004e 00BF     		.align	2
  95              	.L2:
  96 0050 00000000 		.word	RCC_APB2PeriphClockCmd
  97 0054 00000000 		.word	RCC_APB1PeriphClockCmd
  98 0058 00000000 		.word	GPIO_Init
  99 005c 00080140 		.word	1073809408
 100 0060 000C0140 		.word	1073810432
 101 0064 00000000 		.word	GPIO_ResetBits
 102              		.cfi_endproc
 103              	.LFE29:
 105              		.text
 106              	.Letext0:
 107              		.file 2 "/usr/include/newlib/machine/_default_types.h"
 108              		.file 3 "/usr/include/newlib/stdint.h"
 109              		.file 4 "./Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x/stm32f10x.h"
 110              		.file 5 "./Libraries/STM32F10x_StdPeriph_Driver/inc/stm32f10x_gpio.h"
 111              		.file 6 "./Libraries/CMSIS/CM3/CoreSupport/core_cm3.h"
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
     /tmp/ccimaz1a.s:19     .text.gpio_init:00000000 $t
     /tmp/ccimaz1a.s:24     .text.gpio_init:00000000 gpio_init
     /tmp/ccimaz1a.s:96     .text.gpio_init:00000050 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
RCC_APB2PeriphClockCmd
RCC_APB1PeriphClockCmd
GPIO_Init
GPIO_ResetBits
